/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feluletek;

import alaposztalyok.Hitelkartya;
import alaposztalyok.Kartya;
import alaposztalyok.Bankkartya;
import vezerles.Vezerles;
import rendezoosztalyok.Nevszerint;
import rendezoosztalyok.Egyenlegszerint;
import rendezoosztalyok.Hitelszerint;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vezerles.Vezerles;

/**
 *
 * @author Sandor
 */
public class BankkartyaPanel extends javax.swing.JPanel {

    /**
     * Creates new form BankkartyaPanel
     */
    private DefaultTableModel tablaModell;
    private static List<Hitelkartya> hrendezolista = new ArrayList<>();
    private static List<Bankkartya> brendezolista = new ArrayList<>();

    public BankkartyaPanel() {
        initComponents();
        tab5KimutatasTbl.setShowGrid(true);
        tablaModell = (DefaultTableModel) tab5KimutatasTbl.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab5BtnGroup = new javax.swing.ButtonGroup();
        BankkartyaTabbedPane = new javax.swing.JTabbedPane();
        tab1SzerzodesPanel = new javax.swing.JPanel();
        tab1UgyfelNevLbl = new javax.swing.JLabel();
        tab1UgyfelNevTxt = new javax.swing.JTextField();
        tab1KartyaTipusLbl = new javax.swing.JLabel();
        tab1KartyaTipusCmb = new javax.swing.JComboBox();
        tab1SzerzodesKotesBtn = new javax.swing.JButton();
        tab1StatusLbl = new javax.swing.JLabel();
        tab1HitelkeretLbl = new javax.swing.JLabel();
        tab1HitelKeretTxt = new javax.swing.JTextField();
        tab2FeltoltesPanel = new javax.swing.JPanel();
        tab2kSzamLbl = new javax.swing.JLabel();
        tab2feltoltOsszegLbl = new javax.swing.JLabel();
        tab2kSzamTxt = new javax.swing.JTextField();
        tab2feltoltOsszegTxt = new javax.swing.JTextField();
        tab2feltoltBtn = new javax.swing.JButton();
        tab3vasarlasPanel = new javax.swing.JPanel();
        tab3aruArLbl = new javax.swing.JLabel();
        tab3kSzamLbl = new javax.swing.JLabel();
        tab3aruArTxt = new javax.swing.JTextField();
        tab3kSzamTxt = new javax.swing.JTextField();
        tab3VasarlasBtn = new javax.swing.JButton();
        tab4LekerdezesPanel = new javax.swing.JPanel();
        tab4kSzamLbl = new javax.swing.JLabel();
        tab4kSzamTxt = new javax.swing.JTextField();
        tab4LekerdezBtn = new javax.swing.JButton();
        tab4tulajdonosLbl = new javax.swing.JLabel();
        tab4kTipusLbl = new javax.swing.JLabel();
        tab4egyenlegLbl = new javax.swing.JLabel();
        tab4hiteltartozasLbl = new javax.swing.JLabel();
        tab4hitelkeretLbl = new javax.swing.JLabel();
        tab5bankPanel = new javax.swing.JPanel();
        tab4KimutatasLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab5KimutatasTbl = new javax.swing.JTable();
        tab5nevSzerintBtn = new javax.swing.JRadioButton();
        tab5egyenlegSzerintBtn = new javax.swing.JRadioButton();
        tab5hitelTartozasSzerintBtn = new javax.swing.JRadioButton();
        tab5teljesOsszegLbl = new javax.swing.JLabel();

        tab1UgyfelNevLbl.setText("Ügyfél Neve:");

        tab1KartyaTipusLbl.setText("Kártyatípus:");

        tab1KartyaTipusCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "válasszon", "bankkártya", "hitelkártya" }));
        tab1KartyaTipusCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab1KartyaTipusCmbActionPerformed(evt);
            }
        });

        tab1SzerzodesKotesBtn.setText("Szerződéskötés");
        tab1SzerzodesKotesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab1SzerzodesKotesBtnActionPerformed(evt);
            }
        });

        tab1StatusLbl.setText("Status");
        tab1StatusLbl.setVisible(false);

        tab1HitelkeretLbl.setText("Hitelkeret:");
        tab1HitelkeretLbl.setVisible(false);

        tab1HitelKeretTxt.setVisible(false);

        javax.swing.GroupLayout tab1SzerzodesPanelLayout = new javax.swing.GroupLayout(tab1SzerzodesPanel);
        tab1SzerzodesPanel.setLayout(tab1SzerzodesPanelLayout);
        tab1SzerzodesPanelLayout.setHorizontalGroup(
            tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1SzerzodesPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tab1HitelkeretLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab1KartyaTipusLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab1UgyfelNevLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tab1HitelKeretTxt)
                    .addComponent(tab1UgyfelNevTxt)
                    .addComponent(tab1KartyaTipusCmb, 0, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab1SzerzodesPanelLayout.createSequentialGroup()
                        .addComponent(tab1SzerzodesKotesBtn)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab1SzerzodesPanelLayout.createSequentialGroup()
                        .addComponent(tab1StatusLbl)
                        .addGap(88, 88, 88))))
        );
        tab1SzerzodesPanelLayout.setVerticalGroup(
            tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1SzerzodesPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tab1UgyfelNevLbl)
                    .addComponent(tab1UgyfelNevTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tab1KartyaTipusLbl)
                    .addComponent(tab1KartyaTipusCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tab1SzerzodesKotesBtn))
                .addGap(18, 18, 18)
                .addGroup(tab1SzerzodesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tab1StatusLbl)
                    .addComponent(tab1HitelkeretLbl)
                    .addComponent(tab1HitelKeretTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        BankkartyaTabbedPane.addTab("Szerződés", tab1SzerzodesPanel);

        tab2kSzamLbl.setText("Kártyaszám:");

        tab2feltoltOsszegLbl.setText("Feltölteni kívánt Összeg:");

        tab2feltoltBtn.setText("Feltöltés!");
        tab2feltoltBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab2feltoltBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab2FeltoltesPanelLayout = new javax.swing.GroupLayout(tab2FeltoltesPanel);
        tab2FeltoltesPanel.setLayout(tab2FeltoltesPanelLayout);
        tab2FeltoltesPanelLayout.setHorizontalGroup(
            tab2FeltoltesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2FeltoltesPanelLayout.createSequentialGroup()
                .addGroup(tab2FeltoltesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab2FeltoltesPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(tab2FeltoltesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tab2kSzamLbl)
                            .addComponent(tab2feltoltOsszegLbl))
                        .addGap(37, 37, 37)
                        .addGroup(tab2FeltoltesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tab2kSzamTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(tab2feltoltOsszegTxt)))
                    .addGroup(tab2FeltoltesPanelLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(tab2feltoltBtn)))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        tab2FeltoltesPanelLayout.setVerticalGroup(
            tab2FeltoltesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2FeltoltesPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(tab2FeltoltesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tab2kSzamLbl)
                    .addComponent(tab2kSzamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tab2FeltoltesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tab2feltoltOsszegLbl)
                    .addComponent(tab2feltoltOsszegTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(tab2feltoltBtn)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        BankkartyaTabbedPane.addTab("Feltöltés", tab2FeltoltesPanel);

        tab3aruArLbl.setText("Az áru ára:");

        tab3kSzamLbl.setText("Kártyaszám:");

        tab3VasarlasBtn.setText("Vásárlás!");
        tab3VasarlasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab3VasarlasBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab3vasarlasPanelLayout = new javax.swing.GroupLayout(tab3vasarlasPanel);
        tab3vasarlasPanel.setLayout(tab3vasarlasPanelLayout);
        tab3vasarlasPanelLayout.setHorizontalGroup(
            tab3vasarlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3vasarlasPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(tab3vasarlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tab3vasarlasPanelLayout.createSequentialGroup()
                        .addComponent(tab3kSzamLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tab3kSzamTxt))
                    .addGroup(tab3vasarlasPanelLayout.createSequentialGroup()
                        .addComponent(tab3aruArLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tab3aruArTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(171, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3vasarlasPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tab3VasarlasBtn)
                .addGap(66, 66, 66))
        );
        tab3vasarlasPanelLayout.setVerticalGroup(
            tab3vasarlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3vasarlasPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(tab3vasarlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tab3aruArLbl)
                    .addComponent(tab3aruArTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tab3vasarlasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tab3kSzamLbl)
                    .addComponent(tab3kSzamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(tab3VasarlasBtn)
                .addContainerGap(153, Short.MAX_VALUE))
        );

        BankkartyaTabbedPane.addTab("Vásárlás", tab3vasarlasPanel);

        tab4kSzamLbl.setText("Kártyaszám:");

        tab4LekerdezBtn.setText("Lekérdez");
        tab4LekerdezBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab4LekerdezBtnActionPerformed(evt);
            }
        });

        tab4tulajdonosLbl.setText("jLabel1");
        tab4tulajdonosLbl.setVisible(false);

        tab4kTipusLbl.setText("jLabel2");
        tab4kTipusLbl.setVisible(false);

        tab4egyenlegLbl.setText("jLabel3");
        tab4egyenlegLbl.setVisible(false);

        tab4hiteltartozasLbl.setText("jLabel4");
        tab4hiteltartozasLbl.setVisible(false);

        tab4hitelkeretLbl.setText("jLabel5");
        tab4hitelkeretLbl.setVisible(false);

        javax.swing.GroupLayout tab4LekerdezesPanelLayout = new javax.swing.GroupLayout(tab4LekerdezesPanel);
        tab4LekerdezesPanel.setLayout(tab4LekerdezesPanelLayout);
        tab4LekerdezesPanelLayout.setHorizontalGroup(
            tab4LekerdezesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4LekerdezesPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(tab4LekerdezesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab4LekerdezesPanelLayout.createSequentialGroup()
                        .addComponent(tab4tulajdonosLbl)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(tab4LekerdezesPanelLayout.createSequentialGroup()
                        .addComponent(tab4kSzamLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tab4kSzamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(tab4LekerdezBtn)
                        .addGap(53, 53, 53))
                    .addGroup(tab4LekerdezesPanelLayout.createSequentialGroup()
                        .addGroup(tab4LekerdezesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tab4hitelkeretLbl)
                            .addComponent(tab4hiteltartozasLbl)
                            .addComponent(tab4kTipusLbl)
                            .addComponent(tab4egyenlegLbl))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        tab4LekerdezesPanelLayout.setVerticalGroup(
            tab4LekerdezesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4LekerdezesPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(tab4LekerdezesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tab4kSzamLbl)
                    .addComponent(tab4kSzamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tab4LekerdezBtn))
                .addGap(46, 46, 46)
                .addComponent(tab4tulajdonosLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab4kTipusLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab4egyenlegLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab4hiteltartozasLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab4hitelkeretLbl)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        BankkartyaTabbedPane.addTab("Lekérdezés", tab4LekerdezesPanel);

        tab4KimutatasLbl.setText("Kimutatás");

        tab5KimutatasTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tulajdonos", "Sorszám", "Egyenleg", "Hiteltartozás"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab5KimutatasTbl);

        tab5BtnGroup.add(tab5nevSzerintBtn);
        tab5nevSzerintBtn.setText("Név szerint");
        tab5nevSzerintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab5nevSzerintBtnActionPerformed(evt);
            }
        });

        tab5BtnGroup.add(tab5egyenlegSzerintBtn);
        tab5egyenlegSzerintBtn.setText("Egyenleg szerint");
        tab5egyenlegSzerintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab5egyenlegSzerintBtnActionPerformed(evt);
            }
        });

        tab5BtnGroup.add(tab5hitelTartozasSzerintBtn);
        tab5hitelTartozasSzerintBtn.setText("Hiteltartozás szerint");
        tab5hitelTartozasSzerintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tab5hitelTartozasSzerintBtnActionPerformed(evt);
            }
        });

        tab5teljesOsszegLbl.setText("jLabel1");
        tab5teljesOsszegLbl.setVisible(false);

        javax.swing.GroupLayout tab5bankPanelLayout = new javax.swing.GroupLayout(tab5bankPanel);
        tab5bankPanel.setLayout(tab5bankPanelLayout);
        tab5bankPanelLayout.setHorizontalGroup(
            tab5bankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5bankPanelLayout.createSequentialGroup()
                .addGroup(tab5bankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab5bankPanelLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(tab4KimutatasLbl))
                    .addGroup(tab5bankPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tab5bankPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(tab5bankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tab5bankPanelLayout.createSequentialGroup()
                                .addComponent(tab5nevSzerintBtn)
                                .addGap(116, 116, 116)
                                .addComponent(tab5teljesOsszegLbl))
                            .addComponent(tab5hitelTartozasSzerintBtn)
                            .addComponent(tab5egyenlegSzerintBtn))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab5bankPanelLayout.setVerticalGroup(
            tab5bankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5bankPanelLayout.createSequentialGroup()
                .addComponent(tab4KimutatasLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab5bankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tab5nevSzerintBtn)
                    .addComponent(tab5teljesOsszegLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab5egyenlegSzerintBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab5hitelTartozasSzerintBtn)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        BankkartyaTabbedPane.addTab("Bank", tab5bankPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BankkartyaTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BankkartyaTabbedPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tab1KartyaTipusCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab1KartyaTipusCmbActionPerformed
        if (tab1KartyaTipusCmb.getSelectedItem().equals(Hitelkartya.kartyatipus)) {
            tab1HitelKeretTxt.setVisible(true);
            tab1HitelkeretLbl.setVisible(true);
            tab1HitelKeretTxt.setText(null);
        } else {
            tab1HitelKeretTxt.setVisible(false);
            tab1HitelkeretLbl.setVisible(false);
            tab1HitelKeretTxt.setText(null);
        }
    }//GEN-LAST:event_tab1KartyaTipusCmbActionPerformed

    private void tab1SzerzodesKotesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab1SzerzodesKotesBtnActionPerformed
        szerzodeskotes();
    }//GEN-LAST:event_tab1SzerzodesKotesBtnActionPerformed

    private void tab2feltoltBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab2feltoltBtnActionPerformed
        feltoltes();
    }//GEN-LAST:event_tab2feltoltBtnActionPerformed

    private void tab3VasarlasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab3VasarlasBtnActionPerformed
        vasarlas();
    }//GEN-LAST:event_tab3VasarlasBtnActionPerformed

    private void tab4LekerdezBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab4LekerdezBtnActionPerformed
        lekerdez();
    }//GEN-LAST:event_tab4LekerdezBtnActionPerformed

    private void tab5nevSzerintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab5nevSzerintBtnActionPerformed
        nevSzerintRendez();
        osszEgyenlegSzamol();
    }//GEN-LAST:event_tab5nevSzerintBtnActionPerformed

    private void tab5egyenlegSzerintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab5egyenlegSzerintBtnActionPerformed
        egyenlegSzerintRendez();
        osszEgyenlegSzamol();
    }//GEN-LAST:event_tab5egyenlegSzerintBtnActionPerformed

    private void tab5hitelTartozasSzerintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tab5hitelTartozasSzerintBtnActionPerformed
        hitelTartozasSzerintRendez();
        osszEgyenlegSzamol();
    }//GEN-LAST:event_tab5hitelTartozasSzerintBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane BankkartyaTabbedPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tab1HitelKeretTxt;
    private javax.swing.JLabel tab1HitelkeretLbl;
    private javax.swing.JComboBox tab1KartyaTipusCmb;
    private javax.swing.JLabel tab1KartyaTipusLbl;
    private javax.swing.JLabel tab1StatusLbl;
    private javax.swing.JButton tab1SzerzodesKotesBtn;
    private javax.swing.JPanel tab1SzerzodesPanel;
    private javax.swing.JLabel tab1UgyfelNevLbl;
    private javax.swing.JTextField tab1UgyfelNevTxt;
    private javax.swing.JPanel tab2FeltoltesPanel;
    private javax.swing.JButton tab2feltoltBtn;
    private javax.swing.JLabel tab2feltoltOsszegLbl;
    private javax.swing.JTextField tab2feltoltOsszegTxt;
    private javax.swing.JLabel tab2kSzamLbl;
    private javax.swing.JTextField tab2kSzamTxt;
    private javax.swing.JButton tab3VasarlasBtn;
    private javax.swing.JLabel tab3aruArLbl;
    private javax.swing.JTextField tab3aruArTxt;
    private javax.swing.JLabel tab3kSzamLbl;
    private javax.swing.JTextField tab3kSzamTxt;
    private javax.swing.JPanel tab3vasarlasPanel;
    private javax.swing.JLabel tab4KimutatasLbl;
    private javax.swing.JButton tab4LekerdezBtn;
    private javax.swing.JPanel tab4LekerdezesPanel;
    private javax.swing.JLabel tab4egyenlegLbl;
    private javax.swing.JLabel tab4hitelkeretLbl;
    private javax.swing.JLabel tab4hiteltartozasLbl;
    private javax.swing.JLabel tab4kSzamLbl;
    private javax.swing.JTextField tab4kSzamTxt;
    private javax.swing.JLabel tab4kTipusLbl;
    private javax.swing.JLabel tab4tulajdonosLbl;
    private javax.swing.ButtonGroup tab5BtnGroup;
    private javax.swing.JTable tab5KimutatasTbl;
    private javax.swing.JPanel tab5bankPanel;
    private javax.swing.JRadioButton tab5egyenlegSzerintBtn;
    private javax.swing.JRadioButton tab5hitelTartozasSzerintBtn;
    private javax.swing.JRadioButton tab5nevSzerintBtn;
    private javax.swing.JLabel tab5teljesOsszegLbl;
    // End of variables declaration//GEN-END:variables

    private void szerzodeskotes() {
        String nev = tab1UgyfelNevTxt.getText();
        if (nev.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Név megadása kötelező!");
            return;
        }
        if (tab1KartyaTipusCmb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Kérem válassza ki a kártyatípust!");
            return;
        }

        String tipus = (String) tab1KartyaTipusCmb.getSelectedItem();
        Integer keret = null;
        if (tipus.equals(Hitelkartya.kartyatipus)) {
            if (tab1HitelKeretTxt.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Adjon meg hitelkeretet!");
                return;
            }
            try {
                keret = Integer.valueOf(tab1HitelKeretTxt.getText());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Kérem számot adjon meg a hitelkeret mezőbe!");
                return;
            }
            if (keret <= 0) {
                JOptionPane.showMessageDialog(this, "Kérem nullánál nagyobb összeget adjon meg!");
                return;
            }

        }
        final Kartya kartya = Vezerles.szerzodesKotes(nev, tipus, keret);
        tab1StatusLbl.setText("Kártyaszám: " + kartya.getKartyaszam());
        tab1StatusLbl.setVisible(true);
        tab1UgyfelNevTxt.setText(null);
        tab1KartyaTipusCmb.setSelectedIndex(0);
        tab1HitelKeretTxt.setText(null);

    }

    private void feltoltes() {
        String kszam = tab2kSzamTxt.getText();
        if (kszam.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Adjon meg kártyaszámot!");
            return;
        }
        Integer kszamInt;
        try {
            kszamInt = Integer.valueOf(kszam);
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Kérem számot adjon meg a kártyaszám mezőbe!");
            return;
        }
        Kartya kartya = Vezerles.getKartya(kszamInt);
        if (kartya == null) {
            JOptionPane.showMessageDialog(this, "Kérem adjon meg érvényes kártyaszámot!");
            return;
        }

        String osszeg = tab2feltoltOsszegTxt.getText();

        if (osszeg.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Adjon meg összeget a feltöltéshez!");
            return;
        }
        Integer osszegInt;
        try {
            osszegInt = Integer.valueOf(osszeg);
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Kérem számot adjon meg a feltöltés mezőbe!");
            return;
        }
        if (osszegInt <= 0) {
            JOptionPane.showMessageDialog(this, "Kérem pozitív összeget adjon meg a feltöltési mezőbe!");
            return;
        }
        kartya.feltolt(osszegInt);
        JOptionPane.showMessageDialog(this, "Sikeres feltöltés!");

        tab2feltoltOsszegTxt.setText(null);
        tab2kSzamTxt.setText(null);
    }

    private void vasarlas() {
        String kszam = tab3kSzamTxt.getText();
        if (kszam.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Adjon meg kártyaszámot!");
            return;
        }
        Integer kszamInt;
        try {
            kszamInt = Integer.valueOf(kszam);
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Kérem számot adjon meg a kártyaszám mezőbe!");
            return;
        }
        Kartya kartya = Vezerles.getKartya(kszamInt);
        if (kartya == null) {
            JOptionPane.showMessageDialog(this, "Kérem érvényes kártyaszámot adjon meg!");
            return;
        }

        String osszeg = tab3aruArTxt.getText();

        if (osszeg.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Adjon meg összeget!");
            return;
        }
        Integer osszegInt;
        try {
            osszegInt = Integer.valueOf(osszeg);
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Kérem számot adjon meg az áru ára mezőbe!");
            return;
        }
        if (osszegInt <= 0) {
            JOptionPane.showMessageDialog(this, "Kérem pozitív számot adjon meg az áru ára mezőbe!");
            return;
        }
        boolean sikeres = kartya.vasarol(osszegInt);
        if (sikeres) {
            JOptionPane.showMessageDialog(this, "Sikeres vásárlás!");
            tab3kSzamTxt.setText(null);
            tab3aruArTxt.setText(null);
        } else {
            JOptionPane.showMessageDialog(this, "Nincs fedezet a vásárláshoz!");
        }
    }

    private void lekerdez() {
        String kszam = tab4kSzamTxt.getText();
        if (kszam.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kérem adjon meg kártyaszámot!");
            return;
        }
        Integer kszamInt;
        try {
            kszamInt = Integer.valueOf(kszam);
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Kérem számot adjon meg a kártyaszám mezőbe!");
            return;
        }
        Kartya kartya = Vezerles.getKartya(kszamInt);
        if (kartya == null) {
            JOptionPane.showMessageDialog(this, "Kérem érvényes kártyaszámot adjon meg!");
            return;
        }
        if (kartya.getKartyatipus().equals("bankkártya")) {
            tab4tulajdonosLbl.setText("Tulajdonos: " + kartya.getTulajdonos());
            tab4tulajdonosLbl.setVisible(true);

            tab4kTipusLbl.setText("Kártyatípus: " + kartya.getKartyatipus());
            tab4kTipusLbl.setVisible(true);

            tab4egyenlegLbl.setText("Egyenleg: " + kartya.getEgyenleg());
            tab4egyenlegLbl.setVisible(true);

            tab4hiteltartozasLbl.setVisible(false);
            tab4hitelkeretLbl.setVisible(false);

        } else {

            tab4tulajdonosLbl.setText("Tulajdonos: " + kartya.getTulajdonos());
            tab4tulajdonosLbl.setVisible(true);

            tab4kTipusLbl.setText("Kártyatípus: " + kartya.getKartyatipus());
            tab4kTipusLbl.setVisible(true);

            tab4egyenlegLbl.setText("Egyenleg: " + kartya.getEgyenleg());
            tab4egyenlegLbl.setVisible(true);

            tab4hitelkeretLbl.setText("Hitelkeret: " + ((Hitelkartya) kartya).getHitelkeret());
            tab4hitelkeretLbl.setVisible(true);

            tab4hiteltartozasLbl.setText("Hiteltartozás: " + ((Hitelkartya) kartya).getHiteltartozas());
            tab4hiteltartozasLbl.setVisible(true);
        }
    }

    private void nevSzerintRendez() {
        int count = this.tablaModell.getRowCount();
        List<Kartya> rendezolista = new ArrayList<>(Vezerles.kartyak);
        Collections.sort(rendezolista, new Nevszerint());
        for (int i = count - 1; i >= 0; i--) {
            tablaModell.removeRow(i);
        }
        for (Kartya kartya : rendezolista) {
            if (kartya instanceof Hitelkartya) {
                Hitelkartya hitelkartya = (Hitelkartya) kartya;
                Object[] tablaSor = {kartya.getTulajdonos(), kartya.getKartyaszam(), kartya.getEgyenleg(), ((Hitelkartya) kartya).getHiteltartozas()};
                this.tablaModell.addRow(tablaSor);

            } else {
                Object[] tablaSor = {kartya.getTulajdonos(), kartya.getKartyaszam(), kartya.getEgyenleg(), ""};
                this.tablaModell.addRow(tablaSor);
            }
        }
    }

    private void osszEgyenlegSzamol() {
        int osszEgyenleg;
        int hitelOssz = 0;
        int bankOssz = 0;
        for (Kartya kartya : Vezerles.kartyak) {
            if (kartya instanceof Hitelkartya) {
                hitelOssz += kartya.getEgyenleg() - ((Hitelkartya) kartya).getHiteltartozas();
            } else {
                bankOssz += kartya.getEgyenleg();
            }
            osszEgyenleg = hitelOssz + bankOssz;
            tab5teljesOsszegLbl.setText("A teljes összeg: " + osszEgyenleg);
            tab5teljesOsszegLbl.setVisible(true);
        }
    }

    private void egyenlegSzerintRendez() {
        int count = this.tablaModell.getRowCount();
        List<Kartya> rendezolista = new ArrayList<>(Vezerles.kartyak);
        Collections.sort(rendezolista, new Egyenlegszerint());
        for (int i = count - 1; i >= 0; i--) {
            tablaModell.removeRow(i);
        }
        for (Kartya kartya : rendezolista) {
            if (kartya instanceof Hitelkartya) {
                Hitelkartya hitelkartya = (Hitelkartya) kartya;
                Object[] tablaSor = {kartya.getTulajdonos(), kartya.getKartyaszam(), kartya.getEgyenleg(), ((Hitelkartya) kartya).getHiteltartozas()};
                this.tablaModell.addRow(tablaSor);

            } else {
                Object[] tablaSor = {kartya.getTulajdonos(), kartya.getKartyaszam(), kartya.getEgyenleg(), ""};
                this.tablaModell.addRow(tablaSor);
            }
        }
    }

    private void hitelTartozasSzerintRendez() {
        int count = this.tablaModell.getRowCount();
        List<Kartya> rendezolista = new ArrayList<>(Vezerles.kartyak);
        for (Kartya kartya : rendezolista) {
            if (kartya instanceof Hitelkartya) {
                hrendezolista.add((Hitelkartya) kartya);
            } else {
                brendezolista.add((Bankkartya) kartya);
            }
        }
        Collections.sort(hrendezolista, new Hitelszerint());
        Collections.sort(brendezolista, new Egyenlegszerint());
        for (int i = count - 1; i >= 0; i--) {
            tablaModell.removeRow(i);
        }
        for (Hitelkartya kartya : hrendezolista) {
            Hitelkartya hitelkartya = kartya;
            Object[] tablaSor = {kartya.getTulajdonos(), kartya.getKartyaszam(), kartya.getEgyenleg(), kartya.getHiteltartozas()};
            this.tablaModell.addRow(tablaSor);
        }
        for (Bankkartya kartya : brendezolista) {
            Bankkartya bankkartya = kartya;
            Object[] tablaSor = {kartya.getTulajdonos(), kartya.getKartyaszam(), kartya.getEgyenleg(), ""};
            this.tablaModell.addRow(tablaSor);
        }
        hrendezolista.clear();
        brendezolista.clear();
    }
}
